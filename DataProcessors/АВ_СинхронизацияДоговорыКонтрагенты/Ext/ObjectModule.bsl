// Функция возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	
    ПараметрыРегистрации = Новый Структура;
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    ПараметрыРегистрации.Вставить("Наименование", "Загрузка договоров");
    ПараметрыРегистрации.Вставить("Версия", "1.0");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
   // ПараметрыРегистрации.Вставить("ЗащитаОтОпасныхДействийметодов", Ложь);
    ПараметрыРегистрации.Вставить("Информация", "Загрузка договоров");
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    ДобавитьКоманду(ТаблицаКоманд,
    "Загрузка договоров",
    "ЗагрузкаДоговоров",
    "ВызовСерверногоМетода",
    Истина,"");
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    Возврат ПараметрыРегистрации;
	
КонецФункции


Функция ПолучитьТаблицуКоманд()
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
    Возврат Команды;
КонецФункции


Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКоманду(Идентификатор) Экспорт
		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.ИНН КАК ИНН
		|ИЗ
		|	Справочник.Организации КАК Организации";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокИНН = Новый Массив;
	ТекстОтбораОрганизаций="";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.инн) ТОгда
			Если ТекстОтбораОрганизаций<>"" Тогда
				ТекстОтбораОрганизаций = ТекстОтбораОрганизаций + " или ";
			КонецЕсли;
			ТекстОтбораОрганизаций =ТекстОтбораОрганизаций + " ДокументыДляВыгрузкиБух.Холдер.ИНН ="""+ВыборкаДетальныеЗаписи.ИНН+"""";
		КонецЕсли;	
	КонецЦикла;
	ТекстОтбораОрганизаций = ТекстОтбораОрганизаций + ")";
	
	База = ПодключитьИБ();
	
	ДатаСтарта = ТекущаяДата();
		
	Запрос = База.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыДляВыгрузкиБух.Документ.Владелец.ИНН КАК ДокументВладелецИНН,
		|	ДокументыДляВыгрузкиБух.Документ.Владелец.КПП КАК ДокументВладелецКПП,
		|	ПРЕДСТАВЛЕНИЕ(ДокументыДляВыгрузкиБух.Документ.Владелец.ТипКонтрагента) КАК ДокументВладелецТип,
		|	ДокументыДляВыгрузкиБух.Документ.Владелец.Наименование КАК ДокументВладелецНаименование,
		|	ДокументыДляВыгрузкиБух.Документ.Владелец.НаименованиеПолное КАК ДокументВладелецНаименованиеПолное,
		|	ПРЕДСТАВЛЕНИЕ(ДокументыДляВыгрузкиБух.Документ.ВидДоговора) КАК ДокументВидДоговора,
		|	""Договор"" как видИсточника,
		|	ДокументыДляВыгрузкиБух.Документ.НачПериода КАК ДокументНачПериода,
		|	ДокументыДляВыгрузкиБух.Документ.Номер КАК ДокументНомер,
		|	ДокументыДляВыгрузкиБух.Документ КАК Документ,
		|	ДокументыДляВыгрузкиБух.Документ.Владелец КАК ДокументВладелец,
		|	ДокументыДляВыгрузкиБух.Документ.Организация.ИНН КАК ДокументОрганизацияИНН,
		|	ДокументыДляВыгрузкиБух.Документ.Организация.КПП КАК ДокументОрганизацияКПП,
		|	Ложь КАК ФизикиОтдельно
		|ИЗ
		|	РегистрСведений.ДокументыДляВыгрузкиБух КАК ДокументыДляВыгрузкиБух
		|ГДЕ
		|	ДокументыДляВыгрузкиБух.Документ ССЫЛКА Справочник.ДоговорыВзаиморасчетов
		|	И ДокументыДляВыгрузкиБух.ДатаМодификации >= &ДатаСтарта
		|	И ДокументыДляВыгрузкиБух.Выгружен = ЛОЖЬ   
		|	И ("+ТекстОтбораОрганизаций+"		
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументыДляВыгрузкиБух.Документ.Поставщик.ИНН ,
		|	ДокументыДляВыгрузкиБух.Документ.Поставщик.КПП ,
		|	ПРЕДСТАВЛЕНИЕ(ДокументыДляВыгрузкиБух.Документ.Поставщик.ТипКонтрагента),
		|	ДокументыДляВыгрузкиБух.Документ.Поставщик.Наименование,
		|	ДокументыДляВыгрузкиБух.Документ.Поставщик.НаименованиеПолное,
		|	ВЫБОР
		|		КОГДА ДокументыДляВыгрузкиБух.Документ.ЭтоКомиссия
		|			ТОГДА ""На комиссию""
		|		ИНАЧЕ ""С поставщиком""
		|	КОНЕЦ,
		|	""СделкаВыкупа"",
		|	ВЫБОР
		|		КОГДА ДокументыДляВыгрузкиБух.Документ.ЭтоКомиссия
		|			ТОГДА ДокументыДляВыгрузкиБух.Документ.Дата
		|		ИНАЧЕ НЭЗакупка.Дата
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДокументыДляВыгрузкиБух.Документ.ЭтоКомиссия
		|			ТОГДА ДокументыДляВыгрузкиБух.Документ.Номер
		|		ИНАЧЕ НЭЗакупка.Номер
		|	КОНЕЦ,
		|	ДокументыДляВыгрузкиБух.Документ,
		|	ДокументыДляВыгрузкиБух.Документ.Поставщик,
		|	ДокументыДляВыгрузкиБух.Документ.Холдер.ИНН,
		|	ДокументыДляВыгрузкиБух.Документ.Холдер.КПП,
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.ДокументыДляВыгрузкиБух КАК ДокументыДляВыгрузкиБух
		|		Левое СОЕДИНЕНИЕ Документ.НЭЗакупка КАК НЭЗакупка
		|		ПО (ДокументыДляВыгрузкиБух.Документ = НЭЗакупка.Основание)
		|ГДЕ
		|	ДокументыДляВыгрузкиБух.Документ ССЫЛКА Документ.СделкаВыкупа
		|	И ДокументыДляВыгрузкиБух.ДатаМодификации >= &ДатаСтарта
		|	И ДокументыДляВыгрузкиБух.Документ.Состояние <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийОтменен)
		|	И НЕ ДокументыДляВыгрузкиБух.Документ.Поставщик.Ссылка ЕСТЬ NULL
		|	И ДокументыДляВыгрузкиБух.Выгружен = ЛОЖЬ
		|	И ("+ТекстОтбораОрганизаций+"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументыДляВыгрузкиБух.Документ.Покупатель.ИНН,
		|	ДокументыДляВыгрузкиБух.Документ.Покупатель.КПП,
		|	ПРЕДСТАВЛЕНИЕ(ДокументыДляВыгрузкиБух.Документ.Покупатель.ТипКонтрагента),
		|	ДокументыДляВыгрузкиБух.Документ.Покупатель.Наименование,
		|	ДокументыДляВыгрузкиБух.Документ.Покупатель.НаименованиеПолное,
		|	""С покупателем"",
		|	""СделкаРеализации"",
		|	ДокументыДляВыгрузкиБух.Документ.Дата,
		|	ДокументыДляВыгрузкиБух.Документ.Номер,
		|	ДокументыДляВыгрузкиБух.Документ,
		|	ДокументыДляВыгрузкиБух.Документ.Покупатель,
		|	ДокументыДляВыгрузкиБух.Документ.Холдер.ИНН,
		|	ДокументыДляВыгрузкиБух.Документ.Холдер.КПП,
		|	Истина
		|ИЗ
		|	РегистрСведений.ДокументыДляВыгрузкиБух КАК ДокументыДляВыгрузкиБух
		|ГДЕ
		|	ДокументыДляВыгрузкиБух.Документ ССЫЛКА Документ.СделкаРеализации
		|	И ДокументыДляВыгрузкиБух.ДатаМодификации >= &ДатаСтарта
		|	И не ДокументыДляВыгрузкиБух.Документ.Покупатель.ссылка ЕСТЬ NULL
		|	И ДокументыДляВыгрузкиБух.Выгружен = ЛОЖЬ
		|	И ДокументыДляВыгрузкиБух.Документ.Состояние <> ЗНАЧЕНИЕ(Справочник.СтатусыОбъектов.ОбщийОтменен)
		|	И ("+ТекстОтбораОрганизаций;
	
	Запрос.УстановитьПараметр("ДатаСтарта", Дата("20191119"));
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДОкументНомер) Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			НачатьТранзакцию();	
			Организация = НайтиОрганизацию(ВыборкаДетальныеЗаписи.ДокументОрганизацияИНН, ВыборкаДетальныеЗаписи.ДокументОрганизацияКПП);
		 
			УидКонтрагента = База.XMLСтрока(ВыборкаДетальныеЗаписи.ДокументВладелец);
			УидДоговора = База.XMLСтрока(ВыборкаДетальныеЗаписи.Документ);
		 	Контрагент = НайтиКонтрагента(ВыборкаДетальныеЗаписи.ДокументВладелецИНН, ВыборкаДетальныеЗаписи.ДокументВладелецКПП,УИДКонтрагента, ВыборкаДетальныеЗаписи.ДокументВладелецТип, ВыборкаДетальныеЗаписи.ФизикиОтдельно, ВыборкаДетальныеЗаписи.ДокументВладелецНаименованиеПолное);
			Если ЗначениеЗаполнено(Контрагент) и не Контрагент=неопределено Тогда
		 		Договор = НайтиДоговор(Организация,Контрагент, ВыборкаДетальныеЗаписи.ДОкументНомер, ВыборкаДетальныеЗаписи.ДокументНачПериода,УидДоговора,ВыборкаДетальныеЗаписи.ДокументВидДоговора, Ложь,,);

			КонецЕсли;	
			
			//Передаем обратную связь
			РС = База.РегистрыСведений.ДокументыДляВыгрузкиБух.СоздатьМенеджерЗаписи();
			РС.Документ = ВыборкаДетальныеЗаписи.Документ;
			РС.Прочитать();
			Если РС.ДатаМодификации<ДатаСтарта Тогда
				РС.Выгружен = Истина;
				РС.Записать();
			КонецЕсли;
			
		 	ЗафиксироватьТранзакцию();
		
		Исключение
		КонецПопытки; 
		 
	КонецЦикла;
	


	
КонецПроцедуры
	
&НаСервере
Функция ПодключитьИБ()
	// получаем COM соединение из кэша, если не подключено - подключаем
	                                                                   
		ТестоваяБаза  = СтрНайти(ВРЕГ(СтрокаСоединенияИнформационнойБазы()),"TEST1C");
		
		Если ТестоваяБаза=0 Тогда
			СтрокаПодключения = "Srvr='MainAppM';Ref='asc_oper';";
			//СтрокаПодключения = "Srvr='MainDev';Ref='ad_sto_matrix';";
		Иначе	
			СтрокаПодключения = "Srvr='MainAppM';Ref='asc_oper';";
		//	СтрокаПодключения = "Srvr='Test1C';Ref='sto_oper';";
		КонецЕсли;
		
		V8COMConnector= Новый COMОбъект("V83.COMConnector");
		Попытка
			База = V8COMConnector.Connect(СтрокаПодключения);
		Исключение
			Сообщить("Ошибка подключения ИБ: "+ОписаниеОшибки());		
			База = Неопределено;
		КонецПопытки;
		//Если База=Неопределено Тогда
		//	Объект.ХранилищеОбъекта     = Неопределено;
		//Иначе
		//	Структура               = New Структура("Объект", База);
		//	Объект.ХранилищеОбъекта     = ПоместитьВоВременноеХранилище(Структура, Объект.ХранилищеОбъекта);
		//КонецЕсли; 
	//КонецЕсли;
	
	Возврат База;
	
КонецФункции


Функция НайтиОрганизацию(ИНН,КПП)
	
		//  Ищем по ИНН + КПП
		//-----------------------
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ИНН = &ИНН
		|	И (Организации.КПП = &КПП
		|			ИЛИ Организации.КПП = """")";
		
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.УстановитьПараметр("КПП", КПП);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.ссылка;
		КонецЦикла;
		
		//  2. Ищем по ИНН 
		//-----------------------
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ИНН = &ИНН";
		
		Запрос.УстановитьПараметр("ИНН", ИНН);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.ссылка;
		КонецЦикла;
		
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция НайтиДоговор(Организация,Контрагент, НомерДоговора,ДатаДоговора, УИД_Строка, ВидДоговора, ПодразделениеВДоговоре, Подразделение = неопределено, ТочкаОформления = неопределено)
	Сообщить("Ищем договор"+НомерДоговора);
	// Ищем по УИДу договора (свойство УИД_Матрица)
	// Если найдено и номер-дата не соответствует - меняем
	
	
	Если ЗначениеЗаполнено(УИД_Строка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеСведения.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		|ГДЕ
		|	ДополнительныеСведения.Свойство.Имя = ""Матрица_УИД""
		|	И ДополнительныеСведения.Значение = &Договор_УИД";
		
		Запрос.УстановитьПараметр("Договор_УИД", УИД_Строка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Найден = Ложь;	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если не (ВыборкаДетальныеЗаписи.Объект.Номер = номерДоговора и ВыборкаДетальныеЗаписи.Объект.Дата  = ДатаДоговора) Тогда
				Договор = ВыборкаДетальныеЗаписи.объект.ПолучитьОбъект();
				Договор.Комментарий = Договор.Комментарий + "#"+ТекущаяДата()+" Изменены сведения о договоре №"+СокрЛП(Договор.Номер) + " от "+Формат(Договор.Дата,"ДФ=dd.MM.yyyy");
				Договор.Дата = ДатаДоговора;
				Договор.Номер = НомерДоговора;
				Договор.Наименование = "№ "+СокрЛП(НомерДоговора) + " от "+Формат(ДатаДоговора,"ДФ=dd.MM.yyyy");
				Договор.Записать();
				
			КонецЕсли;
			Найден = Истина;
			Сообщение = Новый СообщениеПользователю;
			
			Сообщить("Нашел по УИД "+УИД_Строка);
			Возврат Истина;
		КонецЦикла;
	КонецЕсли;

	//Получим вид договора
	Перечисление_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
	Если ВидДоговора = "С покупателем" тогда
		Перечисление_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	ИначеЕсли ВидДоговора = "На комиссию" тогда
		Перечисление_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом;
	ИначеЕсли ВидДоговора = "С поставщиком" тогда
		Перечисление_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	КонецЕсли;
		
	
	Если НомерДоговора<>неопределено и НомерДоговора<>"ОФЕРТА"   Тогда      //Не пустой договор
		Если номерДоговора="" Тогда
			ф=1;
		КОнецЕсли;
		
		Если ПодразделениеВДоговоре Тогда
			//Запрос = Новый Запрос;
			//Запрос.Текст = 
			//"ВЫБРАТЬ
			//|	вложенныйЗапрос.Ссылка КАК Ссылка
			//|ИЗ
			//|	(ВЫБРАТЬ
			//|		ЕСТЬNULL(ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка, ДоговорыКонтрагентов.Ссылка) КАК Ссылка,
			//|		ДоговорыКонтрагентовДополнительныеРеквизиты.Значение КАК Значение
			//|	ИЗ
			//|		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			//|			ПОЛНОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ДополнительныеРеквизиты КАК ДоговорыКонтрагентовДополнительныеРеквизиты
			//|			ПО (ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка = ДоговорыКонтрагентов.Ссылка)
			//|	ГДЕ
			//|		ДоговорыКонтрагентов.Ссылка.ВидДоговора = &ВидДоговора
			//|		И ДоговорыКонтрагентов.Ссылка.Номер = &Номер
			//|		И ДоговорыКонтрагентов.Ссылка.Организация = &Организация
			//|		И ДоговорыКонтрагентов.Ссылка.Владелец = &Владелец
			//|		И ВЫБОР
			//|				КОГДА &Подразделение = &ПустоеПодразделение
			//|					ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство, 0) = 0
			//|							ИЛИ ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство = &Свойство
			//|								И ДоговорыКонтрагентовДополнительныеРеквизиты.Значение = &Подразделение
			//|				ИНАЧЕ ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство = &Свойство
			//|						И ДоговорыКонтрагентовДополнительныеРеквизиты.Значение = &Подразделение
			//|			КОНЕЦ) КАК вложенныйЗапрос
			//|ГДЕ
			//|	вложенныйЗапрос.Ссылка.ПометкаУдаления = ЛОЖЬ
			//|
			//|СГРУППИРОВАТЬ ПО
			//|	вложенныйЗапрос.Ссылка";
			//
			//Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
			//Запрос.УстановитьПараметр("Подразделение", Подразделение);
			//Запрос.УстановитьПараметр("Свойство", ДопРеквизит_ОбособленноеПодразделение);
			
		Иначе // Если не по подразделению
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
			|	И ДоговорыКонтрагентов.Номер = &Номер
			|	И ДоговорыКонтрагентов.Дата = &Дата
			|	И ДоговорыКонтрагентов.Организация = &Организация
			|	И ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
			
		КонецЕсли;
		Запрос.УстановитьПараметр("ВидДоговора", Перечисление_ВидДоговора);
		Запрос.УстановитьПараметр("Владелец", Контрагент);
		Запрос.УстановитьПараметр("Номер", СокрЛП(НомерДоговора));
		Запрос.УстановитьПараметр("Дата", ДатаДоговора);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Заполним УИД в свойствах договора
			НовоеСвойство = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			НовоеСвойство.Объект = ВыборкаДетальныеЗаписи.Ссылка;
			НовоеСвойство.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Матрица_УИД");
			НовоеСвойство.Значение = УИД_Строка;
			
			НовоеСвойство.Записать(Истина);			
			
			Возврат Истина;
		КонецЦикла;
		
		
		//2. Ищем по Номер  + Организация + Вид договора  (БЕЗ ДАТЫ!!!)
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И ДоговорыКонтрагентов.Дата = &Дата", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка.Дата = &Дата", "");
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат Истина;
		КонецЦикла;
		
	Иначе   // Договор не заполнен и будем искать по наименованию (ВидДоговора + " "+Организация) с учетом отбора по подразделению
		
		НаименованиеДоговора = СокрЛП(ВидДоговора)+" "+СокрЛП(Организация);
		
		Если ПодразделениеВДоговоре Тогда
			//Запрос = Новый Запрос;
			//Запрос.Текст = 
			//"ВЫБРАТЬ
			//|	вложенныйЗапрос.Ссылка КАК Ссылка
			//|ИЗ
			//|	(ВЫБРАТЬ
			//|		ЕСТЬNULL(ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка, ДоговорыКонтрагентов.Ссылка) КАК Ссылка,
			//|		ДоговорыКонтрагентовДополнительныеРеквизиты.Значение КАК Значение
			//|	ИЗ
			//|		Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			//|			ПОЛНОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ДополнительныеРеквизиты КАК ДоговорыКонтрагентовДополнительныеРеквизиты
			//|			ПО (ДоговорыКонтрагентовДополнительныеРеквизиты.Ссылка = ДоговорыКонтрагентов.Ссылка)
			//|	ГДЕ
			//|		ДоговорыКонтрагентов.Ссылка.ВидДоговора = &ВидДоговора
			//|		И ДоговорыКонтрагентов.Ссылка.Наименование подобно &Наименование
			//|		И ДоговорыКонтрагентов.Ссылка.Организация = &Организация
			//|		И ДоговорыКонтрагентов.Ссылка.Владелец = &Владелец
			//|		И ВЫБОР
			//|				КОГДА &Подразделение = &ПустоеПодразделение
			//|					ТОГДА ЕСТЬNULL(ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство, 0) = 0
			//|							ИЛИ ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство = &Свойство
			//|								И ДоговорыКонтрагентовДополнительныеРеквизиты.Значение = &Подразделение
			//|				ИНАЧЕ ДоговорыКонтрагентовДополнительныеРеквизиты.Свойство = &Свойство
			//|						И ДоговорыКонтрагентовДополнительныеРеквизиты.Значение = &Подразделение
			//|			КОНЕЦ) КАК вложенныйЗапрос
			//|ГДЕ
			//|	вложенныйЗапрос.Ссылка.ПометкаУдаления = ЛОЖЬ
			//|
			//|СГРУППИРОВАТЬ ПО
			//|	вложенныйЗапрос.Ссылка";
			//
			//Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
			//Запрос.УстановитьПараметр("Подразделение", Подразделение);
			//Запрос.УстановитьПараметр("Свойство", ДопРеквизит_ОбособленноеПодразделение);
			
		Иначе // Если не по подразделению
			
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Организация = &Организация
			|	И ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
			|	И ДоговорыКонтрагентов.Наименование ПОДОБНО &Наименование
			|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДоговорыКонтрагентов.Код УБЫВ";                   
			
			
		КонецЕсли;
		
		
		Запрос.УстановитьПараметр("ВидДоговора", Перечисление_ВидДоговора);
		Запрос.УстановитьПараметр("Владелец", Контрагент);
		Запрос.УстановитьПараметр("Наименование", НаименованиеДоговора+"%");
		Запрос.УстановитьПараметр("Организация", Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат Истина;
		КонецЦикла;
		
		
	КонецЕсли;	
	
	
	// Создаем новый договор
		Сообщить("Создаем новый договор....");
		НовыйДоговор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
		Если НомерДоговора<>неопределено и НомерДоговора<>"ОФЕРТА" Тогда
			
			//НовыйДоговор.УстановитьСсылкуНового(Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(УИД));
			НовыйДоговор.Номер 			= НомерДоговора;
			НовыйДоговор.Дата 			= ДатаДоговора;
			//<Кош, 18.04.2022, В наименоваоние договора  подставим вид и организацию, для совместимости с алгоритмом поиска договора в ОУ>
			//НовыйДоговор.Наименование = "№ "+НомерДоговора+ " от "+Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"); =>          
			НовыйДоговор.Наименование = Строка(Перечисление_ВидДоговора)+" "+Организация.Наименование +" № "+НомерДоговора+ " от "+Формат(ДатаДоговора,"ДФ=dd.MM.yyyy");   
			//</Кош>
		Иначе
			НовыйДоговор.Наименование = Строка(Перечисление_ВидДоговора)+" "+Организация.Наименование;
		КонецЕсли;	
		
		НовыйДоговор.Владелец 		= Контрагент;
		НовыйДоговор.Организация 	= Организация;
		НовыйДоговор.ВидДоговора 	= Перечисление_ВидДоговора;
		НовыйДоговор.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
		НовыйДоговор.СпособЗаполненияСтавкиНДС = перечисления.СпособыЗаполненияСтавкиНДС.Автоматически;
		Если Перечисление_ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			НовыйРеквизит = НовыйДоговор.ДополнительныеРеквизиты.Добавить();
			НовыйРеквизит.Свойство =  ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","УслугаПоВознаграждению");
			выборка =  Справочники.АВ_НастройкиОбмена.Выбрать();
			выборка.Следующий();
			НовыйРеквизит.Значение = выборка.УслугаПоВознаграждению;
		КонецЕсли;	
		
		//Если Подразделение<>неопределено Тогда
		//	НовыйРеквизит = НовыйДоговор.ДополнительныеРеквизиты.Добавить();
		//	НовыйРеквизит.Свойство = ДопРеквизит_ОбособленноеПодразделение;
		//	НовыйРеквизит.Значение = Подразделение;
		//	
		//	НовыйДоговор.Наименование = НовыйДоговор.Наименование+" ("+ТочкаОформления+")";
		//КонецЕсли;
		
		//<Кош, 18.04.2022, +, Для договора с комитентом пропишем доп.условия>
		Если НовыйДоговор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			НовыйДоговор.СпособРасчетаКомиссионногоВознаграждения 	= Перечисления.СпособыРасчетаКомиссионногоВознаграждения.ПроцентОтРазностиСуммПродажиИПоступления;
			НовыйДоговор.ПроцентКомиссионногоВознаграждения			= 100;	
		КонецЕсли;
		//</Кош>
		
		НовыйДоговор.Записать();
		РаботаСДоговорамиКонтрагентовБП.УстановитьОсновнойДоговорКонтрагента(НовыйДоговор.Ссылка);
		
		// Заполним УИД в свойствах договора
		НовоеСвойство = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
		НовоеСвойство.Объект = НовыйДоговор.Ссылка;
		НовоеСвойство.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Матрица_УИД");
		НовоеСвойство.Значение = УИД_Строка;
			
		НовоеСвойство.Записать(Истина);			
		
		Возврат Истина;
		
	
КонецФункции

&НаСервере
Функция НайтиКонтрагента(ИНН,КПП,УИД_Строка, Тип, ФизикиОтдельно, КонтрагентНаименование)
	
	Если ИНН = "" и не физикиОтдельно тогда
		Возврат неопределено;
	КонецЕсли;
	Контрагент  =неопределено;
	
	//1. Ищем по УИД
	Если не УИД_Строка = неопределено Тогда
		УИД = Новый УникальныйИдентификатор(УИД_Строка);
		Контрагент = Справочники.Контрагенты.ПолучитьСсылку(УИД).ПолучитьОбъект();
			
		Если Контрагент <> неопределено Тогда
			Если не Контрагент.ПометкаУдаления Тогда
				Возврат Контрагент.ссылка;
			Иначе 
				Сообщить("ВНИМАНИЕ!!! "+Контрагент+" помечен на удаление!!!");
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
	
	Если ИНН<>"" Тогда
		// 2. Ищем по ИНН + КПП
		//-----------------------
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И Контрагенты.КПП = &КПП";
		
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.УстановитьПараметр("КПП", КПП);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ссылка.головнойКонтрагент<>Справочники.Контрагенты.ПустаяСсылка() ТОгда
				Возврат ВыборкаДетальныеЗаписи.ссылка.ГоловнойКонтрагент;
			Иначе
				Возврат ВыборкаДетальныеЗаписи.ссылка;
			КонецЕсли;	
		КонецЦикла;
		
		//3. Ищем по ИНН и пустому (!) КПП
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И Контрагенты.КПП = """"";
		
		Запрос.УстановитьПараметр("ИНН", ИНН);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если СтрДлина(ИНН)=10 Тогда
				// Возвращаем ошибку контрагента - контрагент есть, но с пустым ИНН - нужно исправить контрагента в базе (добавить КПП)
				Возврат неопределено;
			Иначе	
				Возврат ВыборкаДетальныеЗаписи.ссылка;
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
	Если ИНН = "" и ФизикиОтдельно Тогда
		//Ищем по наименованию
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Наименование = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование", КонтрагентНаименование);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.ссылка;
		КонецЦикла;
	 КонецЕсли;
	
	// 5. Создаем нового контрагента
		
		//Проверяем наличие помеченного на удаление контрагента
	Если Контрагент<>неопределено Тогда
		Сообщить("Но другого не найдено. Поэтому выбираем его!!!");
		Возврат Контрагент;
	КонецЕсли;
		
	Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
		
	Контрагент.ЮридическоеФизическоеЛицо = ?(СтрДлина(ИНН)=10, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);
		
	ЭтоЮрЛицо = (Контрагент.ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Контрагент.ИНН = ИНН;
	Контрагент.КПП = КПП;
		
	Если ЗначениеЗаполнено(ИНН) Тогда	
		ДанныеДляЗаполнения = ДанныеЕдиныхГосРеестровПоИНН(ИНН,КПП, ЭтоЮрЛицо);
		Если не ДанныеДляЗаполнения.ОписаниеОшибки = "" Тогда
			Сообщить("Ошибка загрузки контрагента. ИНН : "+ИНН);
			Возврат Неопределено;
		КОнецЕсли;
		РеквизитыКонтрагента = ПолучитьИзВременногоХранилища(ДанныеДляЗаполнения.АдресРеквизитовКонтрагента);
    	ЗаполнитьРеквизитыКонтрагента(Контрагент, РеквизитыКонтрагента);
		
		Если КПП = Контрагент.Кпп или КПП = "" Тогда
			Контрагент.УстановитьСсылкуНового(Справочники.Контрагенты.ПолучитьСсылку(УИД));
			Контрагент.Записать();
			Сообщить("Добавлен новый контрагент "+Контрагент.Ссылка);
			Возврат Контрагент.Ссылка;	
		Иначе
			Возврат неопределено;
		КонецЕсли;	
	Иначе
		Контрагент.Наименование = КонтрагентНаименование;
		Контрагент.НаименованиеПолное = КонтрагентНаименование;
		Контрагент.УстановитьСсылкуНового(Справочники.Контрагенты.ПолучитьСсылку(УИД));
		Контрагент.Записать();
		
		Возврат Контрагент.Ссылка;
		
	КонецЕсли;	
		
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыКонтрагента(Контрагент, РеквизитыКонтрагента)
	
	ЭтоЮрЛицо = (РеквизитыКонтрагента.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	ЗаполнитьЗначенияСвойств(Контрагент, РеквизитыКонтрагента);
	Контрагент.НаименованиеПолное = РеквизитыКонтрагента.НаименованиеСокращенное;
	
	//Контрагент.Записать();
	
	//Если ЭтоЮрЛицо Тогда
		
		// Заполнение адресов
		
	//	ЗаполнитьЭлементКонтактнойИнформации(Контрагент,"КонтактнаяИнформацияПолеЮрАдресКонтрагента", РеквизитыКонтрагента.ЮридическийАдрес);
		
	//	ЗаполнитьЭлементКонтактнойИнформации(Контрагент,"КонтактнаяИнформацияПолеФактАдресКонтрагента", РеквизитыКонтрагента.ЮридическийАдрес);
	//	ЮрФактАдресаСовпадают = Истина;
		
	//	ЗаполнитьЭлементКонтактнойИнформации(Контрагент,"КонтактнаяИнформацияПолеПочтовыйАдресКонтрагента", РеквизитыКонтрагента.ЮридическийАдрес);
	//	ЮрПочтовыйАдресаСовпадают = Истина;
		
		// Заполнение телефона
		
	//	ЗаполнитьЭлементКонтактнойИнформации(Контрагент,"КонтактнаяИнформацияПолеТелефонКонтрагента", РеквизитыКонтрагента.Телефон);
		
		// Заполнение контактного лица 
		
	//	Если РеквизитыКонтрагента.Руководитель <> Неопределено 
	//		И НЕ ЗначениеЗаполнено(Контрагент.ОсновноеКонтактноеЛицо) Тогда
	//		
	//		ДанныеКонтактногоЛица = РеквизитыКонтрагента.Руководитель;
	//		ПредставлениеКонтактногоЛица = ДанныеКонтактногоЛица.Фамилия
	//			+ " " + ДанныеКонтактногоЛица.Имя
	//			+ " " + ДанныеКонтактногоЛица.Отчество
	//			+ ", " + ДанныеКонтактногоЛица.Должность;
	//		
	//	КонецЕсли;
	//	
	//	Если не ЭтоЮрЛицо  Тогда
	//		Справочники.Контрагенты.УстановитьАктуальноеЗначениеИсторииКПП(Контрагент.КПП , Контрагент.ИсторияКПП);
	//	КонецЕсли;
	//		
	//Иначе
	//	
	//	Контрагент.КПП = "";
	//	СвидетельствоОРегистрации = РеквизитыКонтрагента.СвидетельствоОРегистрации;
	//	Если СвидетельствоОРегистрации <> Неопределено Тогда
	//		Контрагент.СвидетельствоСерияНомер = Строка(СвидетельствоОРегистрации.Серия) + " " + СвидетельствоОРегистрации.Номер;
	//		Контрагент.СвидетельствоДатаВыдачи = СвидетельствоОРегистрации.Дата;
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//Справочники.Контрагенты.УстановитьАктуальноеЗначениеИсторииНаименований(Контрагент.НаименованиеПолное, Контрагент.ИсторияНаименований);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЭлементКонтактнойИнформации(Контрагент, ИмяРеквизита, СтруктураДанных)
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Отбор  = Новый Структура("ИмяРеквизита", ИмяРеквизита);
	Строки = Контрагент.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
	ДанныеСтроки = ?(Строки.Количество() = 0, Неопределено, Строки[0]);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтруктураДанных);
	ДанныеСтроки.ЗначенияПолей = СтруктураДанных.КонтактнаяИнформация;
	Контрагент[ИмяРеквизита]   = СтруктураДанных.Представление;
	
КонецПроцедуры

&НаСервере
Функция ДанныеЕдиныхГосРеестровПоИНН(Знач ИННОбъекта, Знач КППОбъекта, Знач ЭтоЮрЛицо)
	ДанныеЗаполнения = Новый Структура("ОписаниеОшибки", "");
	
	ИННОбъекта = СокрП(ИННОбъекта);
	
	РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(ИННОбъекта, ЭтоЮрЛицо);
	
	Если РезультатПроверки.СоответствуетТребованиям Тогда
		Если РезультатПроверки.ЭтоЮрЛицо Тогда
			РеквизитыКонтрагента = РаботаСКонтрагентами.РеквизитыЮридическогоЛицаПоИНН(ИННОбъекта);
		Иначе
			РеквизитыКонтрагента = РаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(ИННОбъекта);
		КонецЕсли;
		
		РеквизитыКонтрагента.Вставить("ЮридическоеФизическоеЛицо", 
			?(РезультатПроверки.ЭтоЮрЛицо, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо));
		
		Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
			ДанныеЗаполнения.ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
		Иначе
			ДанныеЗаполнения.Вставить("НаименованиеКонтрагента", РеквизитыКонтрагента.Наименование);
			ДанныеЗаполнения.Вставить("ЮридическоеФизическоеЛицо", РеквизитыКонтрагента.ЮридическоеФизическоеЛицо);
			ДанныеЗаполнения.Вставить("АдресРеквизитовКонтрагента", ПоместитьВоВременноеХранилище(РеквизитыКонтрагента, Новый УникальныйИдентификатор));
		КонецЕсли;
	Иначе
		ДанныеЗаполнения.ОписаниеОшибки = РезультатПроверки.ОписаниеОшибки;
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
КонецФункции


